/*
 * (c) Binate Station Private Limited. All rights reserved.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'maven-publish'
}

def tag = System.getenv("CI_COMMIT_TAG")
def artifactId = 'kickoff'
def groupId = 'com.binatestation.android'

android {
    compileSdkVersion compile_sdk_version
    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }
    namespace 'com.binatestation.android.kickoff'

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'com.google.android.material:material:1.8.0-alpha01'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'

    // Specific views
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.github.bumptech.glide:glide:4.13.2'

    // Architectural components
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.9'


}

project.afterEvaluate {
    publishing {
        def isGitlab = System.getenv("GITLAB_CI") != null
        publications {
            def libVersion = kick_off_library_version
            if (isGitlab) {
                def currentBranch = System.getenv("CI_COMMIT_REF_SLUG")
                def defaultBranch = System.getenv("CI_DEFAULT_BRANCH")
                if (tag == null) {
                    if (currentBranch == defaultBranch) {
                        libVersion = kick_off_library_version + "-SNAPSHOT"
                    } else {
                        libVersion = kick_off_library_version + "-" + currentBranch + "-SNAPSHOT"
                    }
                } else {
                    libVersion = kick_off_library_version
                }
            }
            library(MavenPublication) {
                setGroupId groupId
                setArtifactId artifactId
                version libVersion
                artifact bundleReleaseAar
            }
        }
        repositories {
            if (isGitlab) {
                maven {
                    url "https://gitlab.com/api/v4/projects/8748353/packages/maven"
                    name "GitLab"
                    credentials(HttpHeaderCredentials) {
                        name = 'Job-Token'
                        value = System.getenv("CI_JOB_TOKEN")
                    }
                    authentication {
                        header(HttpHeaderAuthentication)
                    }
                }
            } else {
                maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/BinateStation/KickStart")
                    credentials {
                        username = System.getenv("GPR_USER")
                        password = System.getenv("GPR_KEY")
                    }
                }
            }
        }
    }
}

publish.dependsOn assemble
