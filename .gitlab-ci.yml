image: openjdk:11-jdk
stages:
  - lint
  - build
  - test
  - publish
  - release

variables:

  # ANDROID_COMPILE_SDK is the version of Android you're compiling with.
  # It should match compileSdkVersion.
  ANDROID_COMPILE_SDK: "30"

  # ANDROID_BUILD_TOOLS is the version of the Android build tools you are using.
  # It should match buildToolsVersion.
  ANDROID_BUILD_TOOLS: "30.0.3"

  # It's what version of the command line tools we're going to download from the official site.
  # Official Site-> https://developer.android.com/studio/index.html
  # There, look down below at the cli tools only, sdk tools package is of format:
  #        commandlinetools-os_type-ANDROID_SDK_TOOLS_latest.zip
  # when the script was last modified for latest compileSdkVersion, it was which is written down below
  ANDROID_SDK_TOOLS: "7302050"

# Packages installation before running script
before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1

  # Setup path as android_home for moving/exporting the downloaded sdk into it
  - export ANDROID_HOME="${PWD}/android-home"
  # Create a new directory at specified location
  - install -d $ANDROID_HOME
  # Here we are installing androidSDK tools from official source,
  # (the key thing here is the url from where you are downloading these sdk tool for command line, so please do note this url pattern there and here as well)
  # after that unzipping those tools and
  # then running a series of SDK manager commands to install necessary android SDK packages that'll allow the app to build
  - wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  # move to the archive at ANDROID_HOME
  - pushd $ANDROID_HOME
  - unzip -d cmdline-tools cmdline-tools.zip
  - popd
  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/cmdline-tools/bin/

  # Nothing fancy here, just checking sdkManager version
  - sdkmanager --version

  # use yes to accept all licenses
  - yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses || true
  - sdkmanager --sdk_root=${ANDROID_HOME} "platforms;android-${ANDROID_COMPILE_SDK}"
  - sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools"
  - sdkmanager --sdk_root=${ANDROID_HOME} "build-tools;${ANDROID_BUILD_TOOLS}"

  # Not necessary, but just for surity
  - chmod +x ./gradlew

# Basic android and gradle stuff
# Check linting
lintDebug:
  interruptible: true
  only:
    - merge_requests
    - develop
  stage: lint
  script:
    - ./gradlew -Pci --console=plain lintDebug -PbuildDir=lint

lintRelease:
  interruptible: true
  only:
    - tags
  stage: lint
  script:
    - ./gradlew -Pci --console=plain lintRelease -PbuildDir=lint

# Make Project
# Debug Build
assembleDebug:
  interruptible: true
  stage: build
  only:
    - merge_requests
    - develop
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/
    expire_in: 1 hrs

# Release Build
assembleRelease:
  interruptible: true
  stage: build
  only:
    - tags
  script:
    - ./gradlew assembleRelease
  artifacts:
    paths:
      - app/build/outputs/

# Run all tests, if any fails, interrupt the pipeline(fail it)
debugTests:
  interruptible: true
  only:
    - merge_requests
    - develop
  stage: test
  script:
    - ./gradlew -Pci --console=plain testDebug

releaseTests:
  interruptible: true
  only:
    - tags
  stage: test
  script:
    - ./gradlew -Pci --console=plain testRelease

deploy:
  image: gradle:7.0.2-jdk11
  only:
    - tags
  environment:
    name: Production
    url: https://gitlab.com/BinateStation/kickstart/-/packages
  stage: publish
  script:
    - 'gradle publish'

deploySnapshot:
  image: gradle:7.0.2-jdk11
  only:
    - merge_requests
    - develop
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://gitlab.com/BinateStation/kickstart/-/packages
  stage: publish
  script:
    - 'gradle publish'

release:
  # Caution, as of 2021-02-02 these assets links require a login, see:
  # https://gitlab.com/gitlab-org/gitlab/-/issues/299384
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "Release v$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${DARWIN_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}\"}" \
        --assets-link "{\"name\":\"${LINUX_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}\"}"
